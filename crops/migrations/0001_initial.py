# Generated by Django 4.2.7 on 2025-08-30 21:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('scientific_name', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.CharField(choices=[('cereals', 'Cereals'), ('pulses', 'Pulses'), ('vegetables', 'Vegetables'), ('fruits', 'Fruits'), ('oilseeds', 'Oilseeds'), ('cash_crops', 'Cash Crops'), ('spices', 'Spices'), ('medicinal', 'Medicinal Plants'), ('other', 'Other')], max_length=20)),
                ('season', models.CharField(choices=[('kharif', 'Kharif'), ('rabi', 'Rabi'), ('zaid', 'Zaid'), ('all_season', 'All Season')], max_length=20)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='crops/')),
                ('min_temperature', models.DecimalField(decimal_places=1, help_text='Minimum temperature in Celsius', max_digits=4)),
                ('max_temperature', models.DecimalField(decimal_places=1, help_text='Maximum temperature in Celsius', max_digits=4)),
                ('rainfall_requirement', models.CharField(help_text='Rainfall requirement', max_length=100)),
                ('soil_type', models.CharField(help_text='Preferred soil type', max_length=100)),
                ('ph_range', models.CharField(help_text='Optimal pH range', max_length=50)),
                ('sowing_time', models.CharField(help_text='Best time for sowing', max_length=200)),
                ('harvesting_time', models.CharField(help_text='Harvesting period', max_length=200)),
                ('growth_duration', models.CharField(help_text='Days to maturity', max_length=100)),
                ('yield_per_acre', models.CharField(help_text='Expected yield per acre', max_length=100)),
                ('watering_needs', models.TextField(help_text='Watering requirements and schedule')),
                ('sunlight_requirements', models.CharField(help_text='Sunlight requirements', max_length=100)),
                ('care_instructions', models.TextField(help_text='General care instructions')),
                ('harvesting_tips', models.TextField(help_text='Tips for harvesting')),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Crop',
                'verbose_name_plural': 'Crops',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CropPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('land_area', models.DecimalField(decimal_places=2, help_text='Area in acres', max_digits=8)),
                ('planned_sowing_date', models.DateField()),
                ('expected_harvest_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crops.crop')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crop_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PestDisease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('pest', 'Pest'), ('disease', 'Disease'), ('deficiency', 'Nutrient Deficiency'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('symptoms', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('treatment_methods', models.TextField()),
                ('prevention_methods', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='pests_diseases/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('affected_crops', models.ManyToManyField(related_name='pests_diseases', to='crops.crop')),
            ],
            options={
                'verbose_name_plural': 'Pests and Diseases',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='YieldRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('harvest_date', models.DateField()),
                ('quantity_harvested', models.DecimalField(decimal_places=2, help_text='Quantity in kg', max_digits=8)),
                ('quality_grade', models.CharField(blank=True, max_length=20, null=True)),
                ('market_price', models.DecimalField(blank=True, decimal_places=2, help_text='Price per kg', max_digits=8, null=True)),
                ('total_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crop_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yield_records', to='crops.cropplan')),
            ],
            options={
                'ordering': ['-harvest_date'],
            },
        ),
        migrations.CreateModel(
            name='PestDiseaseReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateField()),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('affected_area', models.DecimalField(decimal_places=2, help_text='Affected area in acres', max_digits=5)),
                ('images', models.ImageField(blank=True, null=True, upload_to='pest_reports/')),
                ('status', models.CharField(choices=[('reported', 'Reported'), ('investigating', 'Investigating'), ('treated', 'Treated'), ('resolved', 'Resolved')], default='reported', max_length=20)),
                ('treatment_applied', models.TextField(blank=True, null=True)),
                ('resolution_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crop_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pest_reports', to='crops.cropplan')),
                ('pest_disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crops.pestdisease')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pest_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-report_date'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalCrop',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('scientific_name', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.CharField(choices=[('cereals', 'Cereals'), ('pulses', 'Pulses'), ('vegetables', 'Vegetables'), ('fruits', 'Fruits'), ('oilseeds', 'Oilseeds'), ('cash_crops', 'Cash Crops'), ('spices', 'Spices'), ('medicinal', 'Medicinal Plants'), ('other', 'Other')], max_length=20)),
                ('season', models.CharField(choices=[('kharif', 'Kharif'), ('rabi', 'Rabi'), ('zaid', 'Zaid'), ('all_season', 'All Season')], max_length=20)),
                ('description', models.TextField()),
                ('image', models.TextField(blank=True, max_length=100, null=True)),
                ('min_temperature', models.DecimalField(decimal_places=1, help_text='Minimum temperature in Celsius', max_digits=4)),
                ('max_temperature', models.DecimalField(decimal_places=1, help_text='Maximum temperature in Celsius', max_digits=4)),
                ('rainfall_requirement', models.CharField(help_text='Rainfall requirement', max_length=100)),
                ('soil_type', models.CharField(help_text='Preferred soil type', max_length=100)),
                ('ph_range', models.CharField(help_text='Optimal pH range', max_length=50)),
                ('sowing_time', models.CharField(help_text='Best time for sowing', max_length=200)),
                ('harvesting_time', models.CharField(help_text='Harvesting period', max_length=200)),
                ('growth_duration', models.CharField(help_text='Days to maturity', max_length=100)),
                ('yield_per_acre', models.CharField(help_text='Expected yield per acre', max_length=100)),
                ('watering_needs', models.TextField(help_text='Watering requirements and schedule')),
                ('sunlight_requirements', models.CharField(help_text='Sunlight requirements', max_length=100)),
                ('care_instructions', models.TextField(help_text='General care instructions')),
                ('harvesting_tips', models.TextField(help_text='Tips for harvesting')),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Crop',
                'verbose_name_plural': 'historical Crops',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='CropMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monitoring_date', models.DateField()),
                ('growth_stage', models.CharField(max_length=100)),
                ('health_status', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('critical', 'Critical')], max_length=20)),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='Height in cm', max_digits=5, null=True)),
                ('observations', models.TextField()),
                ('issues_found', models.TextField(blank=True, null=True)),
                ('recommendations', models.TextField(blank=True, null=True)),
                ('images', models.ImageField(blank=True, null=True, upload_to='crop_monitoring/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crop_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_records', to='crops.cropplan')),
            ],
            options={
                'ordering': ['-monitoring_date'],
            },
        ),
        migrations.CreateModel(
            name='CropImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='crops/')),
                ('alt_text', models.CharField(blank=True, max_length=200, null=True)),
                ('order', models.IntegerField(default=0)),
                ('is_primary', models.BooleanField(default=False)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='crops.crop')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CropCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('event_date', models.DateField()),
                ('event_type', models.CharField(max_length=50)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurrence_pattern', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_events', to='crops.crop')),
            ],
            options={
                'ordering': ['event_date'],
            },
        ),
        migrations.CreateModel(
            name='CropAdvice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('advice_type', models.CharField(max_length=50)),
                ('season', models.CharField(blank=True, choices=[('kharif', 'Kharif'), ('rabi', 'Rabi'), ('zaid', 'Zaid'), ('all_season', 'All Season')], max_length=20, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advice', to='crops.crop')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CropActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('sowing', 'Sowing'), ('irrigation', 'Irrigation'), ('fertilization', 'Fertilization'), ('pest_control', 'Pest Control'), ('weeding', 'Weeding'), ('harvesting', 'Harvesting'), ('post_harvest', 'Post Harvest'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('scheduled_date', models.DateField()),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crop_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='crops.cropplan')),
            ],
            options={
                'verbose_name_plural': 'Crop Activities',
                'ordering': ['scheduled_date'],
            },
        ),
    ]
