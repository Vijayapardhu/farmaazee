# Generated by Django 4.2.7 on 2025-08-30 21:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GovernmentScheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('subsidy', 'Subsidy'), ('loan', 'Loan'), ('insurance', 'Insurance'), ('training', 'Training'), ('infrastructure', 'Infrastructure'), ('technology', 'Technology'), ('marketing', 'Marketing'), ('organic', 'Organic Farming'), ('disaster_relief', 'Disaster Relief'), ('other', 'Other')], max_length=20)),
                ('eligibility_criteria', models.TextField()),
                ('benefits', models.TextField()),
                ('application_process', models.TextField()),
                ('required_documents', models.TextField()),
                ('contact_information', models.TextField()),
                ('website_url', models.URLField(blank=True, null=True)),
                ('helpline_number', models.CharField(blank=True, max_length=20, null=True)),
                ('scheme_amount', models.CharField(blank=True, max_length=100, null=True)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('states', models.CharField(help_text='Comma-separated list of applicable states', max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('views', models.IntegerField(default=0)),
                ('applications_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Government Scheme',
                'verbose_name_plural': 'Government Schemes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SchemeApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('disbursed', 'Disbursed'), ('closed', 'Closed')], default='draft', max_length=20)),
                ('full_name', models.CharField(max_length=200)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
                ('village', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('land_area', models.DecimalField(decimal_places=2, help_text='Land area in acres', max_digits=8)),
                ('land_type', models.CharField(max_length=100)),
                ('primary_crop', models.CharField(max_length=100)),
                ('purpose', models.TextField()),
                ('amount_requested', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('supporting_documents', models.TextField(blank=True, null=True)),
                ('applied_date', models.DateTimeField(auto_now_add=True)),
                ('submitted_date', models.DateTimeField(blank=True, null=True)),
                ('reviewed_date', models.DateTimeField(blank=True, null=True)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('disbursed_date', models.DateTimeField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='schemes.governmentscheme')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheme_applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-applied_date'],
            },
        ),
        migrations.CreateModel(
            name='SchemeUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('update_type', models.CharField(choices=[('deadline', 'Deadline Update'), ('criteria', 'Criteria Update'), ('amount', 'Amount Update'), ('process', 'Process Update'), ('general', 'General Update')], max_length=50)),
                ('is_important', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='schemes.governmentscheme')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SchemeTimeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_title', models.CharField(max_length=200)),
                ('event_date', models.DateField()),
                ('event_type', models.CharField(choices=[('announcement', 'Announcement'), ('application_start', 'Application Start'), ('application_end', 'Application End'), ('review_start', 'Review Start'), ('review_end', 'Review End'), ('approval', 'Approval'), ('disbursement', 'Disbursement'), ('other', 'Other')], max_length=50)),
                ('description', models.TextField()),
                ('is_important', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline_events', to='schemes.governmentscheme')),
            ],
            options={
                'ordering': ['event_date'],
            },
        ),
        migrations.CreateModel(
            name='SchemeSuccessStory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beneficiary_name', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=200)),
                ('story_title', models.CharField(max_length=200)),
                ('story_content', models.TextField()),
                ('benefits_received', models.TextField()),
                ('impact_description', models.TextField()),
                ('before_image', models.ImageField(blank=True, null=True, upload_to='success_stories/')),
                ('after_image', models.ImageField(blank=True, null=True, upload_to='success_stories/')),
                ('is_featured', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='success_stories', to='schemes.governmentscheme')),
            ],
            options={
                'verbose_name_plural': 'Scheme Success Stories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SchemeNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('deadline_reminder', 'Deadline Reminder'), ('status_update', 'Status Update'), ('document_required', 'Document Required'), ('approval', 'Approval'), ('rejection', 'Rejection'), ('disbursement', 'Disbursement'), ('general', 'General')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scheme_application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='schemes.schemeapplication')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheme_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SchemeFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('feedback_text', models.TextField()),
                ('category', models.CharField(choices=[('application_process', 'Application Process'), ('documentation', 'Documentation'), ('communication', 'Communication'), ('timeline', 'Timeline'), ('support', 'Support'), ('overall', 'Overall Experience')], max_length=50)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='schemes.schemeapplication')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SchemeFAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='schemes.governmentscheme')),
            ],
            options={
                'verbose_name': 'Scheme FAQ',
                'verbose_name_plural': 'Scheme FAQs',
                'ordering': ['order', 'question'],
            },
        ),
        migrations.CreateModel(
            name='SchemeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=100)),
                ('document_file', models.FileField(upload_to='scheme_documents/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_notes', models.TextField(blank=True, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='schemes.schemeapplication')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='SchemeContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_person', models.CharField(max_length=200)),
                ('designation', models.CharField(max_length=200)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('office_address', models.TextField()),
                ('office_hours', models.CharField(blank=True, max_length=100, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='schemes.governmentscheme')),
            ],
            options={
                'ordering': ['-is_primary', 'contact_person'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalGovernmentScheme',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('subsidy', 'Subsidy'), ('loan', 'Loan'), ('insurance', 'Insurance'), ('training', 'Training'), ('infrastructure', 'Infrastructure'), ('technology', 'Technology'), ('marketing', 'Marketing'), ('organic', 'Organic Farming'), ('disaster_relief', 'Disaster Relief'), ('other', 'Other')], max_length=20)),
                ('eligibility_criteria', models.TextField()),
                ('benefits', models.TextField()),
                ('application_process', models.TextField()),
                ('required_documents', models.TextField()),
                ('contact_information', models.TextField()),
                ('website_url', models.URLField(blank=True, null=True)),
                ('helpline_number', models.CharField(blank=True, max_length=20, null=True)),
                ('scheme_amount', models.CharField(blank=True, max_length=100, null=True)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('states', models.CharField(help_text='Comma-separated list of applicable states', max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('views', models.IntegerField(default=0)),
                ('applications_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Government Scheme',
                'verbose_name_plural': 'historical Government Schemes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
