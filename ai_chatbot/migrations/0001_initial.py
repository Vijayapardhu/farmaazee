# Generated by Django 4.2.7 on 2025-08-31 06:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIKnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('knowledge_type', models.CharField(choices=[('crop_info', 'Crop Information'), ('pest_disease', 'Pest & Disease'), ('soil_management', 'Soil Management'), ('weather_patterns', 'Weather Patterns'), ('best_practices', 'Best Practices'), ('market_trends', 'Market Trends'), ('government_policies', 'Government Policies')], max_length=50)),
                ('keywords', models.TextField(help_text='Comma-separated keywords for search')),
                ('source', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='FarmerQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_text', models.TextField()),
                ('category', models.CharField(choices=[('crop_management', 'Crop Management'), ('pest_control', 'Pest Control'), ('soil_health', 'Soil Health'), ('weather', 'Weather'), ('market_info', 'Market Information'), ('government_schemes', 'Government Schemes'), ('general', 'General Farming'), ('technical', 'Technical Support')], max_length=50)),
                ('ai_response', models.TextField()),
                ('satisfaction_rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_helpful', models.BooleanField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_queries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('user', 'User Message'), ('assistant', 'AI Assistant'), ('system', 'System Message')], max_length=20)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('tokens_used', models.IntegerField(default=0)),
                ('response_time', models.FloatField(default=0.0)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='ai_chatbot.chatsession')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
    ]
