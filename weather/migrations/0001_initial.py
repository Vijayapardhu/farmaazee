# Generated by Django 4.2.7 on 2025-08-30 21:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AirQualityData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('aqi', models.IntegerField(help_text='Air Quality Index')),
                ('pm25', models.DecimalField(decimal_places=2, help_text='PM2.5 concentration', max_digits=5)),
                ('pm10', models.DecimalField(decimal_places=2, help_text='PM10 concentration', max_digits=5)),
                ('co', models.DecimalField(decimal_places=2, help_text='Carbon monoxide concentration', max_digits=5)),
                ('no2', models.DecimalField(decimal_places=2, help_text='Nitrogen dioxide concentration', max_digits=5)),
                ('o3', models.DecimalField(decimal_places=2, help_text='Ozone concentration', max_digits=5)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='RainfallData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('rainfall_amount', models.DecimalField(decimal_places=2, help_text='Rainfall in mm', max_digits=6)),
                ('duration', models.IntegerField(help_text='Duration in minutes')),
                ('intensity', models.CharField(blank=True, max_length=20, null=True)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='SoilMoistureData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('soil_moisture', models.DecimalField(decimal_places=2, help_text='Soil moisture percentage', max_digits=4)),
                ('soil_temperature', models.DecimalField(decimal_places=1, help_text='Soil temperature in Celsius', max_digits=4)),
                ('depth', models.DecimalField(decimal_places=1, help_text='Depth in cm', max_digits=3)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='WeatherAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
                ('alert_type', models.CharField(choices=[('storm', 'Storm Warning'), ('heavy_rain', 'Heavy Rain'), ('drought', 'Drought Warning'), ('heat_wave', 'Heat Wave'), ('cold_wave', 'Cold Wave'), ('flood', 'Flood Warning'), ('cyclone', 'Cyclone Warning'), ('other', 'Other')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('temperature', models.DecimalField(decimal_places=1, help_text='Temperature in Celsius', max_digits=4)),
                ('humidity', models.IntegerField(help_text='Humidity percentage')),
                ('wind_speed', models.DecimalField(decimal_places=2, help_text='Wind speed in km/h', max_digits=5)),
                ('wind_direction', models.CharField(blank=True, max_length=10, null=True)),
                ('pressure', models.DecimalField(decimal_places=2, help_text='Pressure in hPa', max_digits=6)),
                ('description', models.CharField(max_length=100)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility', models.DecimalField(decimal_places=2, help_text='Visibility in km', max_digits=5)),
                ('uv_index', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('is_current', models.BooleanField(default=True)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Weather Data',
                'verbose_name_plural': 'Weather Data',
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='WeatherStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('station_type', models.CharField(choices=[('automatic', 'Automatic Weather Station'), ('manual', 'Manual Weather Station'), ('mobile', 'Mobile Weather Station'), ('satellite', 'Satellite Data')], max_length=20)),
                ('location', models.CharField(max_length=200)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('elevation', models.DecimalField(decimal_places=2, help_text='Elevation in meters', max_digits=6)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('installation_date', models.DateField(blank=True, null=True)),
                ('last_maintenance', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WeatherSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
                ('alert_types', models.JSONField(default=list, help_text='List of alert types to subscribe to')),
                ('notification_method', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('all', 'All')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WeatherReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
                ('report_date', models.DateField()),
                ('weather_condition', models.CharField(max_length=100)),
                ('temperature', models.DecimalField(decimal_places=1, help_text='Temperature in Celsius', max_digits=4)),
                ('humidity', models.IntegerField(help_text='Humidity percentage')),
                ('rainfall', models.DecimalField(blank=True, decimal_places=2, help_text='Rainfall in mm', max_digits=6, null=True)),
                ('wind_speed', models.DecimalField(blank=True, decimal_places=2, help_text='Wind speed in km/h', max_digits=5, null=True)),
                ('observations', models.TextField()),
                ('impact_on_farming', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-report_date'],
            },
        ),
        migrations.CreateModel(
            name='WeatherForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('min_temperature', models.DecimalField(decimal_places=1, help_text='Minimum temperature in Celsius', max_digits=4)),
                ('max_temperature', models.DecimalField(decimal_places=1, help_text='Maximum temperature in Celsius', max_digits=4)),
                ('humidity', models.IntegerField(help_text='Humidity percentage')),
                ('wind_speed', models.DecimalField(decimal_places=2, help_text='Wind speed in km/h', max_digits=5)),
                ('wind_direction', models.CharField(blank=True, max_length=10, null=True)),
                ('description', models.CharField(max_length=100)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('precipitation_probability', models.IntegerField(blank=True, help_text='Precipitation probability percentage', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Weather Forecast',
                'verbose_name_plural': 'Weather Forecasts',
                'ordering': ['date'],
                'unique_together': {('location', 'date')},
            },
        ),
        migrations.CreateModel(
            name='SeasonalForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
                ('season', models.CharField(choices=[('spring', 'Spring'), ('summer', 'Summer'), ('autumn', 'Autumn'), ('winter', 'Winter'), ('monsoon', 'Monsoon'), ('pre_monsoon', 'Pre-Monsoon'), ('post_monsoon', 'Post-Monsoon')], max_length=20)),
                ('year', models.IntegerField()),
                ('forecast_period', models.CharField(help_text='Forecast period description', max_length=100)),
                ('temperature_outlook', models.TextField()),
                ('rainfall_outlook', models.TextField()),
                ('humidity_outlook', models.TextField()),
                ('confidence_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=20)),
                ('farming_recommendations', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-year', 'season'],
                'unique_together': {('location', 'season', 'year')},
            },
        ),
        migrations.CreateModel(
            name='HistoricalWeatherData',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('temperature', models.DecimalField(decimal_places=1, help_text='Temperature in Celsius', max_digits=4)),
                ('humidity', models.IntegerField(help_text='Humidity percentage')),
                ('wind_speed', models.DecimalField(decimal_places=2, help_text='Wind speed in km/h', max_digits=5)),
                ('wind_direction', models.CharField(blank=True, max_length=10, null=True)),
                ('pressure', models.DecimalField(decimal_places=2, help_text='Pressure in hPa', max_digits=6)),
                ('description', models.CharField(max_length=100)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility', models.DecimalField(decimal_places=2, help_text='Visibility in km', max_digits=5)),
                ('uv_index', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('is_current', models.BooleanField(default=True)),
                ('recorded_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Weather Data',
                'verbose_name_plural': 'historical Weather Data',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ClimateData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
                ('year', models.IntegerField()),
                ('month', models.IntegerField()),
                ('avg_temperature', models.DecimalField(decimal_places=1, help_text='Average temperature in Celsius', max_digits=4)),
                ('max_temperature', models.DecimalField(decimal_places=1, help_text='Maximum temperature in Celsius', max_digits=4)),
                ('min_temperature', models.DecimalField(decimal_places=1, help_text='Minimum temperature in Celsius', max_digits=4)),
                ('total_rainfall', models.DecimalField(decimal_places=2, help_text='Total rainfall in mm', max_digits=6)),
                ('rainy_days', models.IntegerField(help_text='Number of rainy days')),
                ('humidity', models.DecimalField(decimal_places=1, help_text='Average humidity percentage', max_digits=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-year', '-month'],
                'unique_together': {('location', 'year', 'month')},
            },
        ),
    ]
