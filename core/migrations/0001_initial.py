# Generated by Django 4.2.7 on 2025-08-30 21:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('farming_techniques', 'Farming Techniques'), ('crop_management', 'Crop Management'), ('soil_health', 'Soil Health'), ('pest_management', 'Pest Management'), ('technology', 'Technology'), ('sustainability', 'Sustainability'), ('market_trends', 'Market Trends')], max_length=20)),
                ('content', models.TextField()),
                ('summary', models.TextField(blank=True, null=True)),
                ('author', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='articles/')),
                ('is_featured', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=True)),
                ('views', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('category', models.CharField(choices=[('general', 'General'), ('crops', 'Crops'), ('weather', 'Weather'), ('market', 'Market'), ('financial', 'Financial'), ('technical', 'Technical')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['order', 'question'],
            },
        ),
        migrations.CreateModel(
            name='InsuranceProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('insurance_type', models.CharField(choices=[('crop', 'Crop Insurance'), ('livestock', 'Livestock Insurance'), ('equipment', 'Equipment Insurance'), ('health', 'Health Insurance'), ('life', 'Life Insurance')], max_length=20)),
                ('description', models.TextField()),
                ('coverage_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('premium_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('coverage_period', models.CharField(max_length=100)),
                ('terms_conditions', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('native_name', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
            },
        ),
        migrations.CreateModel(
            name='LoanProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('loan_type', models.CharField(choices=[('crop', 'Crop Loan'), ('equipment', 'Equipment Loan'), ('infrastructure', 'Infrastructure Loan'), ('emergency', 'Emergency Loan'), ('organic', 'Organic Farming Loan')], max_length=20)),
                ('description', models.TextField()),
                ('min_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('max_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('interest_rate', models.DecimalField(decimal_places=2, help_text='Annual interest rate in percentage', max_digits=5)),
                ('tenure_months', models.IntegerField(help_text='Loan tenure in months')),
                ('processing_fee', models.DecimalField(decimal_places=2, help_text='Processing fee in percentage', max_digits=5)),
                ('eligibility_criteria', models.TextField()),
                ('required_documents', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('service_type', models.CharField(choices=[('cleaning', 'Cleaning & Grading'), ('packaging', 'Packaging'), ('drying', 'Drying'), ('milling', 'Milling'), ('oil_extraction', 'Oil Extraction'), ('preservation', 'Preservation')], max_length=20)),
                ('description', models.TextField()),
                ('suitable_crops', models.TextField()),
                ('processing_capacity', models.CharField(max_length=100)),
                ('contact_person', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('location', models.CharField(max_length=200)),
                ('pricing', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StorageFacility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('facility_type', models.CharField(choices=[('warehouse', 'Warehouse'), ('cold_storage', 'Cold Storage'), ('silo', 'Silo'), ('godown', 'Godown'), ('processing_unit', 'Processing Unit')], max_length=20)),
                ('location', models.CharField(max_length=200)),
                ('capacity', models.CharField(help_text='Storage capacity', max_length=100)),
                ('contact_person', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('description', models.TextField()),
                ('services_offered', models.TextField()),
                ('pricing', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Storage Facilities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TransportationService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=200)),
                ('vehicle_type', models.CharField(choices=[('truck', 'Truck'), ('tractor_trailer', 'Tractor Trailer'), ('mini_truck', 'Mini Truck'), ('refrigerated', 'Refrigerated Vehicle'), ('bulk_carrier', 'Bulk Carrier')], max_length=20)),
                ('capacity', models.CharField(max_length=100)),
                ('service_areas', models.TextField()),
                ('contact_person', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('pricing', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['service_name'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('tutorial', 'Tutorial'), ('demonstration', 'Demonstration'), ('expert_talk', 'Expert Talk'), ('success_story', 'Success Story'), ('technology', 'Technology')], max_length=20)),
                ('description', models.TextField()),
                ('video_url', models.URLField()),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='videos/')),
                ('duration', models.CharField(blank=True, max_length=20, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=True)),
                ('views', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('village', models.CharField(blank=True, max_length=100, null=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', django_countries.fields.CountryField(default='IN', max_length=2)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('land_area', models.DecimalField(blank=True, decimal_places=2, help_text='Land area in acres', max_digits=10, null=True)),
                ('primary_crop', models.CharField(blank=True, max_length=100, null=True)),
                ('farm_type', models.CharField(blank=True, choices=[('small', 'Small Scale (< 2 acres)'), ('medium', 'Medium Scale (2-10 acres)'), ('large', 'Large Scale (> 10 acres)'), ('organic', 'Organic Farming'), ('commercial', 'Commercial Farming'), ('subsistence', 'Subsistence Farming')], max_length=20, null=True)),
                ('experience_years', models.CharField(blank=True, choices=[('beginner', 'Beginner (0-2 years)'), ('intermediate', 'Intermediate (3-5 years)'), ('experienced', 'Experienced (6-10 years)'), ('expert', 'Expert (10+ years)')], max_length=20, null=True)),
                ('sms_notifications', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('preferred_language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.language')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('weather', 'Weather Alert'), ('market', 'Market Update'), ('scheme', 'Government Scheme'), ('crop', 'Crop Advisory'), ('community', 'Community Update'), ('financial', 'Financial Update'), ('general', 'General')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LoanApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_requested', models.DecimalField(decimal_places=2, max_digits=12)),
                ('purpose', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('disbursed', 'Disbursed'), ('closed', 'Closed')], default='pending', max_length=20)),
                ('applied_date', models.DateTimeField(auto_now_add=True)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('disbursed_date', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('loan_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.loanproduct')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loan_applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-applied_date'],
            },
        ),
        migrations.CreateModel(
            name='InsuranceApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('active', 'Active'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('applied_date', models.DateTimeField(auto_now_add=True)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('insurance_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.insuranceproduct')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-applied_date'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalUserProfile',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('village', models.CharField(blank=True, max_length=100, null=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', django_countries.fields.CountryField(default='IN', max_length=2)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('land_area', models.DecimalField(blank=True, decimal_places=2, help_text='Land area in acres', max_digits=10, null=True)),
                ('primary_crop', models.CharField(blank=True, max_length=100, null=True)),
                ('farm_type', models.CharField(blank=True, choices=[('small', 'Small Scale (< 2 acres)'), ('medium', 'Medium Scale (2-10 acres)'), ('large', 'Large Scale (> 10 acres)'), ('organic', 'Organic Farming'), ('commercial', 'Commercial Farming'), ('subsistence', 'Subsistence Farming')], max_length=20, null=True)),
                ('experience_years', models.CharField(blank=True, choices=[('beginner', 'Beginner (0-2 years)'), ('intermediate', 'Intermediate (3-5 years)'), ('experienced', 'Experienced (6-10 years)'), ('expert', 'Expert (10+ years)')], max_length=20, null=True)),
                ('sms_notifications', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('profile_picture', models.TextField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('preferred_language', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.language')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical User Profile',
                'verbose_name_plural': 'historical User Profiles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
